
/* -----------------   TIC TAC TOE Game implemented with Node.js using HTML, CSS and JAVASCRIPT  -------------------------------//
// -----------------   It is played by 2-players choosing between 'X' or 'O'                     -------------------------------*/

/* ------------------------------ styling of our game ------------------------------------------------------------------------- */

*, *::after, *::before{
    box-sizing: border-box;
}

/* Variables to use in styling*/
:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * .9);
}
/* styling of the header Game Name */
.game-name {
    color: black;
    text-align: center;
    font-family: "Century Gothic" ;
}

body {
    margin: 0;
    background-color: gray;
}

/* styling the game board */
.game-board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    grid-template-columns: repeat(3, auto);
    justify-items: center;
    align-items: center;
}

/* styling for all the 9 cells */
.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 2px solid black;
    align-items: center;
    justify-content: center;
    display: flex;
    position: relative;
    cursor: pointer;
}
/* removing the top, bottom, left and right borders of the grid to look like a real tic-tac-toe board */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(3n+1) {
    border-left: none;
}

.cell:nth-child(3n+3) {
    border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom: none;
}

/* styling to show that the second click in an already filled cell is not allowed */
.cell.x,
.cell.circle {
    cursor: not-allowed;
}

/* styling the letter 'X' through CSS */
.cell.x::before,
.cell.x::after {
    content: '';
    position: absolute;
    width : calc(var(--mark-size) * .15);
    height: var(--mark-size);
    background-color: black;
}

.cell.x::before {
    transform: rotate(45deg);
}

.cell.x::after {
    transform: rotate(-45deg);
}

/* styling the 'O' through CSS by making two circles */
.cell.circle::before,
.cell.circle::after {
    content: '';
    position: absolute;
    width : var(--mark-size);
    height: var(--mark-size);
    border-radius: 50%;
    background-color: black;
}

.circle.circle::before {
    width : var(--mark-size);
    height: var(--mark-size);
    background-color: black;
}
.cell.circle::after {
    width : calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: gray;
}

/* styling to diplay the win message , that dimms the screen to 90% transparent only */
.winning-message {
    display: none;
    position:  fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,.9);  /* setting black color for dimming incase of endGame() */
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}
/* styling to show the win message */
.winning-message.show {
    display: flex;
}

/* styling for the 'REPLAY ??' button */
.winning-message button {
    font-size: 3rem;
    background-color: white;
    cursor: pointer;
}